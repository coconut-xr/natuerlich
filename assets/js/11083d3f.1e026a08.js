"use strict";(self.webpackChunknatuerlich_docs=self.webpackChunknatuerlich_docs||[]).push([[968],{7715:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var o=t(7462),i=(t(7294),t(3905)),r=t(5851),a=t(5714);const s={},c="Interaction with @coconut-xr/koestlich",u={unversionedId:"koestlich-interaction",id:"koestlich-interaction",title:"Interaction with @coconut-xr/koestlich",description:"Creating a koestlich UI",source:"@site/docs/koestlich-interaction.md",sourceDirName:".",slug:"/koestlich-interaction",permalink:"/natuerlich/koestlich-interaction",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Input Sources",permalink:"/natuerlich/input-sources"},next:{title:"Layers",permalink:"/natuerlich/layers"}},l={},d=[{value:"Creating a koestlich UI",id:"creating-a-koestlich-ui",level:2},{value:"Binding a koestlich UI to the Hand / Controller",id:"binding-a-koestlich-ui-to-the-hand--controller",level:2}],p={toc:d},h="wrapper";function m(n){let{components:e,...s}=n;return(0,i.kt)(h,(0,o.Z)({},p,s,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interaction-with-coconut-xrkoestlich"},"Interaction with @coconut-xr/koestlich"),(0,i.kt)("h2",{id:"creating-a-koestlich-ui"},"Creating a koestlich UI"),(0,i.kt)("p",null,"Building a UI in WebXR can be achieved with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/coconut-xr/koestlich"},(0,i.kt)("inlineCode",{parentName:"a"},"koestlich")),". ",(0,i.kt)("strong",{parentName:"p"},"natuerlich")," provides out-of-the-box support for interaction with ",(0,i.kt)("strong",{parentName:"p"},"koestlich"),", such as scrolling."),(0,i.kt)("p",null,"The following example creates a simple UI with koestlich that changes its background color when clicked using a ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchHand")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchController"),"."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"For more information on how to build 3D UIs visit the ",(0,i.kt)("a",{parentName:"p",href:"https://coconut-xr.github.io/koestlich/#/"},"koestlich documentation"),".")),(0,i.kt)(a.w,{path:"natuerlich-koestlich-tfpn9v",mdxType:"CodesandboxEmbed"}),(0,i.kt)(r.Z,{img:t(4071),mdxType:"Image"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  XRCanvas,\n  PointerHand,\n  PointerController\n} from "@coconut-xr/natuerlich/defaults";\nimport { RootText } from "@coconut-xr/koestlich";\nimport { getInputSourceId } from "@coconut-xr/natuerlich";\nimport {\n  useEnterXR,\n  NonImmersiveCamera,\n  ImmersiveSessionOrigin\n} from "@coconut-xr/natuerlich/react";\nimport { useState } from "react";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor", "hand-tracking"]\n};\n\nexport default function Index() {\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  const [blue, setBlue] = useState(false);\n\n  return (\n    <div\n      style={{...}}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <group position={[0, 1.5, 1]}>\n          <RootText\n            onClick={() => setBlue((blue) => !blue)}\n            anchorX="center"\n            anchorY="center"\n            padding={0.05}\n            backgroundColor={blue ? "blue" : "green"}\n          >\n            Hello World\n          </RootText>\n        </group>\n        <NonImmersiveCamera position={[0, 1.5, 4]} />\n        <ImmersiveSessionOrigin position={[0, 0, 4]}>\n          <Hands type="pointer" />\n          <Pointers type="grab" />\n        </ImmersiveSessionOrigin>\n      </XRCanvas>\n    </div>\n  );\n}\n')),(0,i.kt)("h2",{id:"binding-a-koestlich-ui-to-the-hand--controller"},"Binding a koestlich UI to the Hand / Controller"),(0,i.kt)("p",null,"Binding an interactive UI to the hands of the users can feel very intuitive. The following example shows how a Koestlich UI can be bound to the wrist. The example requires to create  and use custom hands. Therefore, we recommend to read the ",(0,i.kt)("a",{parentName:"p",href:"/natuerlich/input-sources"},"Input Sources")," documentation first."),(0,i.kt)(a.w,{path:"natuerlich-koestlich-bound-5qz2z8",mdxType:"CodesandboxEmbed"}),(0,i.kt)(r.Z,{img:t(1224),mdxType:"Image"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  XRCanvas,\n  PointerHand,\n  PointerController\n} from "@coconut-xr/natuerlich/defaults";\nimport { RootText } from "@coconut-xr/koestlich";\nimport { getInputSourceId } from "@coconut-xr/natuerlich";\nimport {\n  useEnterXR,\n  NonImmersiveCamera,\n  ImmersiveSessionOrigin,\n  useInputSources\n} from "@coconut-xr/natuerlich/react";\nimport { useState } from "react";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor", "hand-tracking"]\n};\n\nfunction UI() {\n  const [blue, setBlue] = useState(false);\n  return (\n    <RootText\n      onClick={() => setBlue((blue) => !blue)}\n      anchorX="center"\n      anchorY="center"\n      padding={0.05}\n      backgroundColor={blue ? "blue" : "green"}\n    >\n      Hello World\n    </RootText>\n  );\n}\n\nexport default function Index() {\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  const inputSources = useInputSources();\n\n  return (\n    <div\n      style={{\n        position: "absolute",\n        inset: 0,\n        display: "flex",\n        flexDirection: "column"\n      }}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <NonImmersiveCamera position={[0, 1.5, 4]} />\n        <ImmersiveSessionOrigin position={[0, 0, 4]}>\n          {inputSources.map((inputSource) =>\n            inputSource.hand != null ? (\n              <PointerHand\n                id={getInputSourceId(inputSource)}\n                key={getInputSourceId(inputSource)}\n                inputSource={inputSource}\n                hand={inputSource.hand}\n                childrenAtJoint="wrist"\n              >\n                <UI />\n              </PointerHand>\n            ) : (\n              <PointerController\n                id={getInputSourceId(inputSource)}\n                key={getInputSourceId(inputSource)}\n                inputSource={inputSource}\n              >\n                <UI />\n              </PointerController>\n            )\n          )}\n        </ImmersiveSessionOrigin>\n      </XRCanvas>\n    </div>\n  );\n}\n')),(0,i.kt)("hr",null),(0,i.kt)("admonition",{title:"Question not answered?",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If your questions were not yet answered, visit our ",(0,i.kt)("a",{parentName:"p",href:"https://discord.gg/NCYM8ujndE"},"Discord")," \ud83d\ude09")))}m.isMDXComponent=!0},1224:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o=t.p+"assets/images/koestlich-bound-to-hand-b773caa504e53b2c631394d27a93cebe.gif"},4071:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o=t.p+"assets/images/koestlich-interactable-d97cb0c9d87f99fc7853c6ced1b4ae53.gif"}}]);