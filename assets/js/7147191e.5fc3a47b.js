"use strict";(self.webpackChunknatuerlich_docs=self.webpackChunknatuerlich_docs||[]).push([[180],{5794:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var r=t(7462),a=(t(7294),t(3905)),i=t(5851),o=t(5714);const s={},l="Layers",p={unversionedId:"layers",id:"layers",title:"Layers",description:"WebXR Layers allow rendering content in a specific shape (e.g., plane or cylinder) more efficiently and at a higher resolution. natuerlich provides several components that simplify the use of layers. Furthermore, when the layers feature is unavailable, natuerlich falls back to normal three.js shapes.",source:"@site/docs/layers.md",sourceDirName:".",slug:"/layers",permalink:"/natuerlich/layers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Interaction with @coconut-xr/koestlich",permalink:"/natuerlich/koestlich-interaction"},next:{title:"Interaction with Objects",permalink:"/natuerlich/object-interaction"}},c={},d=[{value:"Layer Portals",id:"layer-portals",level:3},{value:"Koestlich Layers",id:"koestlich-layers",level:3}],u={toc:d},m="wrapper";function h(e){let{components:n,...s}=e;return(0,a.kt)(m,(0,r.Z)({},u,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"layers"},"Layers"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/webxrlayers-1/"},"WebXR Layers")," allow rendering content in a specific shape (e.g., plane or cylinder) more efficiently and at a higher resolution. ",(0,a.kt)("strong",{parentName:"p"},"natuerlich")," provides several components that simplify the use of layers. Furthermore, when the layers feature is unavailable, ",(0,a.kt)("strong",{parentName:"p"},"natuerlich")," falls back to normal three.js shapes."),(0,a.kt)("p",null,"Layers can be placed anywhere in the scene, even inside a controller/hand. Layers can either render a texture or render another scene inside them."),(0,a.kt)("p",null,"The following example shows how to apply a texture to a ",(0,a.kt)("inlineCode",{parentName:"p"},"QuadLayer"),". Alternatively, ",(0,a.kt)("strong",{parentName:"p"},"natuerlich")," provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"CylinderLayer"),", which allows rendering textures and scenes to a bend plane."),(0,a.kt)("admonition",{title:"Important",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Layers can not be used with ",(0,a.kt)("inlineCode",{parentName:"p"},'<color attach="background"/>'),". Setting a background color requires using a ",(0,a.kt)("inlineCode",{parentName:"p"},"Background")," component (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"<Background color map .../>"),") instead. Furthermore, the ",(0,a.kt)("inlineCode",{parentName:"p"},'"layers"')," feature must be added to the ",(0,a.kt)("inlineCode",{parentName:"p"},"sessionOptions")," for the ",(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/webxrlayers-1/"},"WebXR Layers")," to be active if supported by the device. By default, layers do not support transparency and will behave incorrectly when displaying transparent content. The ",(0,a.kt)("inlineCode",{parentName:"p"},"transparent")," flag must be set on the layer if transparent content is needed. Using transparent layers further requires the ",(0,a.kt)("inlineCode",{parentName:"p"},'"depth-sorted-layers"')," feature inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"sessionOptions"),". If the required features are absent, the layer is rendered directly inside the scene, losing the advantages of the WebXR layers.")),(0,a.kt)(o.w,{path:"natuerlich-barebones-forked-94hg4s",mdxType:"CodesandboxEmbed"}),(0,a.kt)(i.Z,{img:t(9265),mdxType:"Image"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { XRCanvas } from "@coconut-xr/natuerlich/defaults";\nimport {\n  useEnterXR,\n  NonImmersiveCamera,\n  ImmersiveSessionOrigin,\n  QuadLayer\n} from "@coconut-xr/natuerlich/react";\nimport { useLoader } from "@react-three/fiber";\nimport { TextureLoader } from "three";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor", "layers"]\n};\n\nexport default function Index() {\n  const texture = useLoader(TextureLoader, "img.jpg");\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  return (\n    <div\n      style={{...}}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <QuadLayer\n          texture={texture}\n          pixelWidth={texture.image.width}\n          pixelHeight={texture.image.height}\n          position={[0, 1.5, 1]}\n        />\n        <NonImmersiveCamera position={[0, 1.5, 4]} />\n        <ImmersiveSessionOrigin position={[0, 0, 4]} />\n      </XRCanvas>\n    </div>\n  );\n}\n\n')),(0,a.kt)("h3",{id:"layer-portals"},"Layer Portals"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"natuerlich")," provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"QuadLayerPortal")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"CylinderLayerPortal")," as defaults, allowing to render a scene inside them. All events happening on the surface of the layer are automatically propagated inside the portal."),(0,a.kt)("p",null,"The following example shows how to create an interactive scene inside a portal. We re-use the code for dragging objects from the ",(0,a.kt)("a",{parentName:"p",href:"/natuerlich/object-interaction"},"object interaction")," documentation."),(0,a.kt)("admonition",{title:"Important",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The current implementation is inefficient and results in regular lags. The correct implementation awaits a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mrdoob/three.js/pull/25254"},"PR in three.js"),".")),(0,a.kt)(o.w,{path:"natuerlich-layer-portal-2cl3dv",mdxType:"CodesandboxEmbed"}),(0,a.kt)(i.Z,{img:t(5193),mdxType:"Image"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  XRCanvas,\n  Controllers,\n  Hands\n} from "@coconut-xr/natuerlich/defaults";\nimport {\n  useEnterXR,\n  NonImmersiveCamera,\n  ImmersiveSessionOrigin,\n  CylinderLayerPortal\n} from "@coconut-xr/natuerlich/react";\nimport { useRef } from "react";\nimport { Mesh, Vector3 } from "three";\nimport { isXIntersection } from "@coconut-xr/xinteraction";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor", "hand-tracking", "layers"]\n};\n\nexport default function Index() {\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  return (\n    <div\n      style={{...}}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <CylinderLayerPortal\n          pixelWidth={1024}\n          pixelHeight={1024}\n          position={[0, 1.5, 1]}\n        >\n          <DragBox />\n        </CylinderLayerPortal>\n        <NonImmersiveCamera position={[0, 1.5, 4]} />\n        <ImmersiveSessionOrigin position={[0, 0, 4]}>\n          <Hands />\n          <Controllers />\n        </ImmersiveSessionOrigin>\n      </XRCanvas>\n    </div>\n  );\n}\n\nfunction DragBox() {\n  ...\n}\n')),(0,a.kt)("h3",{id:"koestlich-layers"},"Koestlich Layers"),(0,a.kt)("p",null,"When building a layer portal for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/coconut-xr/koestlich"},"koestlich"),", ",(0,a.kt)("strong",{parentName:"p"},"natuerlich")," also provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"KoestlichQuadLayer")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"KoestlichCylinderLayer"),". Both components allow developers to build a UI directly inside a WebXR Layer without additional configuration. The events propagate automatically inside the layer, as in the previous example."),(0,a.kt)("p",null,"The following example code contains a simple UI rendering two texts. The layer is configured with a pixel size of 512x512."),(0,a.kt)(o.w,{path:"natuerlich-koestlich-layer-portal-8gv5n2",mdxType:"CodesandboxEmbed"}),(0,a.kt)(i.Z,{img:t(3007),mdxType:"Image"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { XRCanvas, KoestlichQuadLayer } from "@coconut-xr/natuerlich/defaults";\nimport {\n  useEnterXR,\n  NonImmersiveCamera,\n  ImmersiveSessionOrigin\n} from "@coconut-xr/natuerlich/react";\nimport { Text, Container } from "@coconut-xr/koestlich";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor", "layers"]\n};\n\nexport default function Index() {\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  return (\n    <div\n      style={{...}}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <KoestlichQuadLayer\n          pixelWidth={512}\n          pixelHeight={512}\n          position={[0, 1.5, 1]}\n        >\n          <Container\n            height="100%"\n            justifyContent="space-between"\n            alignItems="center"\n          >\n            <Text fontSize={64} color="white">Hello World</Text>\n            <Text fontSize={64} color="white">Coconut XR</Text>\n          </Container>\n        </KoestlichQuadLayer>\n        <NonImmersiveCamera position={[0, 1.5, 4]} />\n        <ImmersiveSessionOrigin position={[0, 0, 4]} />\n      </XRCanvas>\n    </div>\n  );\n}\n\n')),(0,a.kt)("hr",null),(0,a.kt)("admonition",{title:"Question not answered?",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If your questions were not yet answered, visit our ",(0,a.kt)("a",{parentName:"p",href:"https://discord.gg/NCYM8ujndE"},"Discord")," \ud83d\ude09")))}h.isMDXComponent=!0},5193:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"assets/images/cylinder-layer-portal-48f13d95e216653b78c2e5b49f546e83.gif"},3007:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"assets/images/koestlich-layer-86f6eccaff3c4696b5479846b0a73bd9.gif"},9265:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"assets/images/layer-866457217f3ae052a30cdbf42d01be5e.gif"}}]);