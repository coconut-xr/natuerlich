"use strict";(self.webpackChunknatuerlich_docs=self.webpackChunknatuerlich_docs||[]).push([[870],{5040:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var t=s(7462),o=(s(7294),s(3905)),a=s(1361);const r={},i="Guards",d={unversionedId:"guards",id:"guards",title:"Guards",description:"Guards allow to conditionally display or include content based on the session mode or whether the object is facing the camera of the user. For instance, the SessionModeGuard guard allows only displaying a background when the session is not an AR session. The SessionModeGuard can receive either a list of allow session modes or a list of deny session modes.",source:"@site/docs/guards.md",sourceDirName:".",slug:"/guards",permalink:"/natuerlich/guards",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Custom Hands and Controllers",permalink:"/natuerlich/custom-input-sources"},next:{title:"Head Up Display",permalink:"/natuerlich/head-up-display"}},u={},l=[],c={toc:l},p="wrapper";function m(e){let{components:n,...s}=e;return(0,o.kt)(p,(0,t.Z)({},c,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"guards"},"Guards"),(0,o.kt)("p",null,"Guards allow to conditionally display or include content based on the session mode or whether the object is facing the camera of the user. For instance, the ",(0,o.kt)("inlineCode",{parentName:"p"},"SessionModeGuard")," guard allows only displaying a background when the session is not an AR session. The ",(0,o.kt)("inlineCode",{parentName:"p"},"SessionModeGuard")," can receive either a list of ",(0,o.kt)("inlineCode",{parentName:"p"},"allow")," session modes or a list of ",(0,o.kt)("inlineCode",{parentName:"p"},"deny")," session modes."),(0,o.kt)(a.w,{path:"natuerlich-guards-xwx9yd",mdxType:"CodesandboxEmbed"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'rimport { XRCanvas } from "@coconut-xr/natuerlich/defaults";\nimport {\n  useEnterXR,\n  SessionModeGuard\n} from "@coconut-xr/natuerlich/react";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor"]\n};\n\nexport default function Index() {\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  return (\n    <div\n      style={{...}}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <SessionModeGuard deny="immersive-ar">\n          <color args={["red"]} attach="background" />\n        </SessionModeGuard>\n      </XRCanvas>\n    </div>\n  );\n}\n\n')),(0,o.kt)("hr",null),(0,o.kt)("admonition",{title:"Question not answered?",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If your questions were not yet answered, visit our ",(0,o.kt)("a",{parentName:"p",href:"https://discord.gg/NCYM8ujndE"},"Discord")," \ud83d\ude09")))}m.isMDXComponent=!0}}]);