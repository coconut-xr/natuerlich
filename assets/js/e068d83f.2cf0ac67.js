"use strict";(self.webpackChunknatuerlich_docs=self.webpackChunknatuerlich_docs||[]).push([[316],{3010:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=n(7462),r=(n(7294),n(3905)),a=(n(5851),n(1361));const i={},o="Tracked Meshes",c={unversionedId:"tracked-meshes",id:"tracked-meshes",title:"Tracked Meshes",description:"natuerlich supports WebXR Mesh Detection Module in the form of TrackedMeshs. The useTrackedMeshes hook allows to retrieve all detected meshes. The TrackedMesh component takes a single mesh and renders the geometry retrieved from the mesh. The material of the TrackedMesh can be customized using R3F, and further content can be placed as its children.",source:"@site/docs/tracked-meshes.md",sourceDirName:".",slug:"/tracked-meshes",permalink:"/natuerlich/tracked-meshes",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Tracked Planes",permalink:"/natuerlich/tracked-planes"},next:{title:"Tracked Images",permalink:"/natuerlich/tracked-images"}},h={},d=[{value:"Get the Mesh for Specific Objects using Semantic Labels",id:"get-the-mesh-for-specific-objects-using-semantic-labels",level:2}],m={toc:d},l="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,s.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tracked-meshes"},"Tracked Meshes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"natuerlich")," supports ",(0,r.kt)("a",{parentName:"p",href:"https://immersive-web.github.io/real-world-meshing/"},"WebXR Mesh Detection Module")," in the form of ",(0,r.kt)("inlineCode",{parentName:"p"},"TrackedMesh"),"s. The ",(0,r.kt)("inlineCode",{parentName:"p"},"useTrackedMeshes")," hook allows to retrieve all detected meshes. The ",(0,r.kt)("inlineCode",{parentName:"p"},"TrackedMesh")," component takes a single mesh and renders the geometry retrieved from the mesh. The material of the ",(0,r.kt)("inlineCode",{parentName:"p"},"TrackedMesh")," can be customized using R3F, and further content can be placed as its children."),(0,r.kt)("admonition",{title:"Important",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"TrackedMesh")," component must be placed inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"ImmersiveSessionOrigin")," if an ",(0,r.kt)("inlineCode",{parentName:"p"},"ImmersiveSessionOrigin")," is present. The ",(0,r.kt)("inlineCode",{parentName:"p"},"useTrackedMeshes")," hook must be placed inside the Canvas. Furthermore, the ",(0,r.kt)("inlineCode",{parentName:"p"},'"mesh-detection"')," feature must be added to the ",(0,r.kt)("inlineCode",{parentName:"p"},"sessionOptions")," for the ",(0,r.kt)("a",{parentName:"p",href:"https://immersive-web.github.io/real-world-meshing/"},"WebXR Mesh Detection Module")," to be active if supported by the device.")),(0,r.kt)(a.w,{path:"natuerlich-tracked-meshes-ylfh84",mdxType:"CodesandboxEmbed"}),(0,r.kt)("p",null,"Image: TBD"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { XRCanvas } from "@coconut-xr/natuerlich/defaults";\nimport {\n  useEnterXR,\n  NonImmersiveCamera,\n  ImmersiveSessionOrigin,\n  TrackedMesh,\n  useTrackedMeshes\n} from "@coconut-xr/natuerlich/react";\nimport { getMeshId } from "@coconut-xr/natuerlich";\n\nconst sessionOptions: XRSessionInit = {\n  requiredFeatures: ["local-floor", "mesh-detection"]\n};\n\nexport default function Index() {\n  const enterAR = useEnterXR("immersive-ar", sessionOptions);\n  const meshes = useTrackedMeshes();\n  return (\n    <div\n      style={{...}}\n    >\n      <button onClick={enterAR}>Enter AR</button>\n      <XRCanvas>\n        <NonImmersiveCamera position={[0, 1.5, 4]} />\n        <ImmersiveSessionOrigin position={[0, 0, 4]}>\n          <pointLight position={[0, 1, 0]} intensity={10} />\n      {meshes.map((mesh) => (\n        <TrackedMesh mesh={mesh} key={getMeshId(mesh)}>\n          <meshPhongMaterial color="gray" />\n        </TrackedMesh>\n      ))}\n        </ImmersiveSessionOrigin>\n      </XRCanvas>\n    </div>\n  );\n}\n\n')),(0,r.kt)("h2",{id:"get-the-mesh-for-specific-objects-using-semantic-labels"},"Get the Mesh for Specific Objects using Semantic Labels"),(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},'useTrackedObjectMeshes("couch")')," you can retrieve all the mesh of all objects that were recognized as couches. Using or rendering the retrieved meshes works the same way as in the demo above. "),(0,r.kt)("hr",null),(0,r.kt)("admonition",{title:"Question not answered?",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If your questions were not yet answered, visit our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/NCYM8ujndE"},"Discord")," \ud83d\ude09")))}p.isMDXComponent=!0}}]);